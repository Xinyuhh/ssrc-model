#PUMA pans, these will be converted into community districts
nyc_puma <- geo.make(state="NY",
puma = c(
3701,
3702,
3703,
3704,
3705,
3706,
3707,
3708,
3709,
3710,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
4108,
4109,
4110,
4111,
4112,
4113,
4114,
3901,
3902,
3903))
#packages you will need
library("devtools")
library("acs")
api.key.install('75c871cf936302d636d65dd6c54b47e6185ab5f4', file = "key.rda")
#this makes your geography pan where all the data will be poured into
nyc_city <- geo.make(state = "NY", place = "New York city")
#borough pan
nyc_boro <- geo.make(state = "NY", county = c(
"Bronx",
"Kings",
"New York",
"Queens",
"Richmond"))
#PUMA pans, these will be converted into community districts
nyc_puma <- geo.make(state="NY",
puma = c(
3701,
3702,
3703,
3704,
3705,
3706,
3707,
3708,
3709,
3710,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
4108,
4109,
4110,
4111,
4112,
4113,
4114,
3901,
3902,
3903))
oldB01003 = acs.lookup(table.number="B01003", endyear = 2015, span = 1)
df <- acs.fetch(geography = nyc_city, variable=oldB01003, endyear = "2015", span = "1", col.names="pretty")
df <- df@estimate
df <- as.data.frame(df)
names(df)[1] <- "age_pyramid_total_nyc"
medianinc <- acs.fetch(geo = nyc_city, table.number="B19013", endyear = "2015", span = "1", col.names="pretty")
df$median_household_income_nyc <- medianinc[,1]
#median income per person
medianinc_personal <- acs.fetch(geo = nyc_city, table.number="B20017", endyear = "2015", span = "1", col.names="pretty")
df$median_personal_earnings_nyc <- medianinc_personal[,c(1)]
oldB15002 = acs.lookup(table.number="B15002", endyear = 2015, span = 1)
education <- acs.fetch(geo = nyc_city, variable=oldB15002, endyear = "2015", span = "1", col.names="pretty")
View(nyc_puma)
View(df)
#author: R.Gluskin
#packages you will need
library("devtools")
library("acs")
install.packages("acs")
install.packages("acs")
install.packages("acs")
#packages you will need
library("devtools")
library("acs")
install.packages("acs")
#packages you will need
library("devtools")
library("acs")
api.key.install('75c871cf936302d636d65dd6c54b47e6185ab5f4', file = "key.rda")
#this makes your geography pan where all the data will be poured into
nyc_city <- geo.make(state = "NY", place = "New York city")
#borough pan
nyc_boro <- geo.make(state = "NY", county = c(
"Bronx",
"Kings",
"New York",
"Queens",
"Richmond"))
View(nyc_boro)
View(nyc_boro)
View(nyc_boro)
View(nyc_boro)
View(nyc_boro)
View(nyc_boro)
#PUMA pans, these will be converted into community districts
nyc_puma <- geo.make(state="NY",
puma = c(
3701,
3702,
3703,
3704,
3705,
3706,
3707,
3708,
3709,
3710,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
4108,
4109,
4110,
4111,
4112,
4113,
4114,
3901,
3902,
3903))
oldB01003 = acs.lookup(table.number="B01003", endyear = 2015, span = 1)
#packages you will need
library("devtools")
library("acs")
#packages you will need
library("devtools")
library("acs")
install.packages("acs")
install.packages("acs")
api.key.install('75c871cf936302d636d65dd6c54b47e6185ab5f4', file = "key.rda")
install.packages("acs")
install.packages("acs")
#this makes your geography pan where all the data will be poured into
nyc_city <- geo.make(state = "NY", place = "New York city")
#borough pan
nyc_boro <- geo.make(state = "NY", county = c(
"Bronx",
"Kings",
"New York",
"Queens",
"Richmond"))
#PUMA pans, these will be converted into community districts
nyc_puma <- geo.make(state="NY",
puma = c(
3701,
3702,
3703,
3704,
3705,
3706,
3707,
3708,
3709,
3710,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
4108,
4109,
4110,
4111,
4112,
4113,
4114,
3901,
3902,
3903))
oldB01003 = acs.lookup(table.number="B01003", endyear = 2015, span = 1)
df <- acs.fetch(geography = nyc_city, variable=oldB01003, endyear = "2015", span = "1", col.names="pretty")
df <- df@estimate
df <- as.data.frame(df)
names(df)[1] <- "age_pyramid_total_nyc"
medianinc <- acs.fetch(geo = nyc_city, table.number="B19013", endyear = "2015", span = "1", col.names="pretty")
medianinc <- as.data.frame(medianinc@estimate)
df$median_household_income_nyc <- medianinc[,1]
#median income per person
medianinc_personal <- acs.fetch(geo = nyc_city, table.number="B20017", endyear = "2015", span = "1", col.names="pretty")
medianinc_personal <- as.data.frame(medianinc_personal@estimate)
df$median_personal_earnings_nyc <- medianinc_personal[,c(1)]
